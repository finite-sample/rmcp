# Poetry lock file (using Docker-first approach)
poetry.lock

# Git (expensive to copy, never needed in container)
.git
.gitignore
.gitattributes

# Virtual environments (never needed in container)
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
/venv-release-test
/venv-test
rmcp_test_env/
*_test_env/

# IDEs (never needed in container)
.vscode/
.cursor/
.idea/
*.swp
*.swo
*~

# OS specific files (never needed in container)
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Cache and build artifacts (expensive to copy, never needed)
__pycache__/
*.py[cod]
*$py.class
.pytest_cache/
.mypy_cache/
.coverage
htmlcov/
build/
dist/
*.egg-info/
.tox/
.nox/

# Documentation builds (large, not needed in runtime)
docs/_build/
docs/.doctrees/
docs/.docbuild/
site/

# Test artifacts (large files, not needed in runtime)
test_*.log
test_*.xlsx
test_*.csv
test_*.json
*.png
*.jpg
*.jpeg
*.gif
*.svg
temp_*.R
temp_*.json
response.json
Rplots.pdf
.coverage.*
htmlcov/

# SSL certificates (generated dynamically, not needed)
certs/
*.pem
*.key
*.crt
*.p12

# Code Assistants (not needed in container)
.claude/

# CI/CD artifacts (large, not needed in runtime)
.github/

# README and docs (not needed in runtime container)
README.md
CHANGELOG.md
examples/
docs/

# Development and maintenance scripts (not needed in runtime)
scripts/

# Additional Docker optimization excludes
# Docker files themselves (not needed in container)
Dockerfile*
.dockerignore
docker-compose*.yml

# Node.js artifacts (if any)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Database files (not needed in container)
*.db
*.sqlite
*.sqlite3

# Log files (can be large)
*.log
logs/

# Backup files (can be large)
*.bak
*.backup
*.old
*.orig

# Archive files (can be large)
*.tar
*.tar.gz
*.zip
*.7z
*.rar

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# VS Code workspace files
*.code-workspace# Docker optimization test - Sun Oct 19 09:30:48 PDT 2025
